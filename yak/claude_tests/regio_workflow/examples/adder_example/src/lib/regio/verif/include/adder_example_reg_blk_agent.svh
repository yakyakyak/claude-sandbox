//------------------------------------------------------------------------------
// Agent class for adder_example register block.
//
// NOTE: This file is autogenerated by regio. DO NOT EDIT.
//------------------------------------------------------------------------------

class adder_example_reg_blk_agent #(
    parameter int REG_ADDR_WID = 32,
    parameter int REG_DATA_WID = 32
) extends reg_verif_pkg::reg_blk_agent#(REG_ADDR_WID, REG_DATA_WID);

    // -------------------------------------------------------------
    // Methods
    // -------------------------------------------------------------

    // Constructor
    function new(input string name="adder_example_reg_blk_agent", input int BASE_ADDR=0);
        super.new(name, BASE_ADDR);
    endfunction

    // ENABLE (1-bit, rw)
    task read_enable(output adder_example_reg_pkg::reg_enable_t reg_enable);
        data_t rd_data;
        _read(adder_example_reg_pkg::OFFSET_ENABLE, rd_data);
        reg_enable = adder_example_reg_pkg::reg_enable_t'(rd_data);
    endtask
  
    task write_enable(input adder_example_reg_pkg::reg_enable_t reg_enable);
        _write(adder_example_reg_pkg::OFFSET_ENABLE, reg_enable);
    endtask
  
    // OPERAND_A (32-bit, rw)
    task read_operand_a(output adder_example_reg_pkg::reg_operand_a_t reg_operand_a);
        data_t rd_data;
        _read(adder_example_reg_pkg::OFFSET_OPERAND_A, rd_data);
        reg_operand_a = adder_example_reg_pkg::reg_operand_a_t'(rd_data);
    endtask
  
    task write_operand_a(input adder_example_reg_pkg::reg_operand_a_t reg_operand_a);
        _write(adder_example_reg_pkg::OFFSET_OPERAND_A, reg_operand_a);
    endtask
  
    // OPERAND_B (32-bit, rw)
    task read_operand_b(output adder_example_reg_pkg::reg_operand_b_t reg_operand_b);
        data_t rd_data;
        _read(adder_example_reg_pkg::OFFSET_OPERAND_B, rd_data);
        reg_operand_b = adder_example_reg_pkg::reg_operand_b_t'(rd_data);
    endtask
  
    task write_operand_b(input adder_example_reg_pkg::reg_operand_b_t reg_operand_b);
        _write(adder_example_reg_pkg::OFFSET_OPERAND_B, reg_operand_b);
    endtask
  
    // RESULT (32-bit, ro)
    task read_result(output adder_example_reg_pkg::reg_result_t reg_result);
        data_t rd_data;
        _read(adder_example_reg_pkg::OFFSET_RESULT, rd_data);
        reg_result = adder_example_reg_pkg::reg_result_t'(rd_data);
    endtask
  
endclass : adder_example_reg_blk_agent
